==================================================================================
SessionM Platform iOS Framework - Cocoapods Linking Instructions
==================================================================================

Follow the steps below to link the framework to your application target using Cocoapods:

1. Add the "use_frameworks!" attribute and "pod 'SessionMFramework'" dependency to your Podfile. 'SessionMFramework/Core' and other subspecs can be used for finer dependency management (additional subspecs can be found in the SessionMFramework Specs repository at https://github.com/CocoaPods/Specs/tree/master/Specs/1/3/1/SessionMFramework).
2. Make sure the Podfile's "platform" attribute is set to at least "8.0".
3. Run "pod install".

==================================================================================
SessionM Platform iOS Framework - Manual Linking Instructions
==================================================================================

Follow the steps below to link the framework to your application target using the packaged BuildAgent command-line tool:

1. Run the BuildAgent tool either from the terminal or by double clicking it in Finder.
2. The first prompt will ask you to enter the path for your Xcode project's project.pbxproj file relative to the current directory (e.g. MyApp.xcodeproj/project.pbxproj if running the BuildAgent tool from the parent directory of MyApp.xcodeproj).
3. The second prompt will ask you to enter the name of the application target that you want to link with the framework (e.g. MyApp).
4. Additional prompts will ask if you would like to link any optional frameworks (enter 'Y' for yes and 'N' for no).

After running the BuildAgent tool, you can open your project in Xcode to ensure that the framework was linked correctly:

1. Ensure that a reference to SessionMFramework was created in the left-side menu Project Navigator.
2. Navigate to the "General" tab under your target's settings and check that SessionMFramework is listed under both "Embedded Binaries" and "Linked Frameworks and Libraries".
3. Navigate to the target's "Build Settings" tab and check that the containing directory of SessionMFramework.framework is listed under "Framework Search Paths".
4. Navigate to the target's "Build Phases" tab and ensure that there is a Run Script phase named "Remove Unused Framework Slices", and that it is located under both the "Embed Frameworks" and "Link Binary With Libraries" phases.
5. Follow the above steps for any additional frameworks that were linked by the BuildAgent tool.

Note: If you move SessionMFramework.framework to a new directory, then be sure to also move BuildAgent to the same directory. The two must be located in the same directory in order for the linking to be successful.
